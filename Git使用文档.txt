##初始化Git仓库：
在项目目录右键打开 git bash  
然后输入命令：“git init”

##自报家门
-就是在git中设置当前使用的用户是谁
配置用户名  config配置的意思
	    global 全局的意思（也就是指配置一次）
-命令：
 1.配置用户名： ‘git config--global user.name "小明"’
 2.配置邮箱： ‘git config -- global user.email "544495731@qq.com"’

##把代码存储到.git仓库中
 -1.把代码放到仓库门口（暂存区） 
     +‘git add ./readme.md’ 把指定的文件放到大门口
     +‘git add ./’ 把所有的修改的文件添加到大门口

 -2.把仓储门口的代码放到里面的房间（版本库）中去 （也就是存起来了）
     +‘git commit -m "这是对添加进去的文件说明信息"’
##可以一次性把我们修改的代码放到房间里（版本库）
 ‘git commit --all -m "说明"
 + --all 表示把所有修改的文件提交到版本库

##查看当前的状态
 -可以用命令来查看当前代码有没有被放到仓储中去
   +“git status”

## git中的忽略文件
 - .gitignore 在这个文件中可以设置要被 忽略的文件或者目录

 -被忽略的文件不会被提交仓储里去
 -在.gitignore 中可以书写要被忽略的文件的路径 以/开头
  不会被提交到仓储中
   “ /.idea”忽略 .idea 文件
   “ /.js” 忽略js目录里的所有文件
   “ /js/*.js” 忽略js目录下的所有js文件

##查看日志
	
 -‘git log’查看历史提交的日志
-‘git log’ --oneline 可以看到简洁版的日志


##回退到指定的版本
 -‘git reset --hard head~0’
    + 表示回退到上一次代码提交时的状态
 - ‘git reset -- hard head~1’
    +表示回退到上上次代码提交时的状态 
-  ‘git reset --hard [系统随机生成的版本号]’
    + 可以通过版本号精确的回退到某一次提交时的状态

-  ‘git reflog’
   + 可以看大每一次切换版本的记录：可以看到所有提交的版本号

## 分支
 - 默认是有一个主分支 master

 ###创建分支
  -‘git branch dev’
    + 创建李一个dev分支
    + 在刚创建的dev分支里的东西和master分支里的东西一样的

 ### 切换分支
   -‘git checkout dev’
    + 切换到指定的分支，这里的切换到名为dev的分支
    ‘git branch’可以查看当前有哪些分支

 ### 合并分支
  -‘git merge dev’
   +合并分支内容，把当前分支与指定的分支（dev） 进行合并
   +当前分支指的是‘git branch’命令输出的前面*号的分支
  -合并时如果有冲突，需要手动去处理，处理后还需要再提交一次
  

### GitHub
   https:github.com
  - 不是git，只是一个网站
  -只不过这个网站提供了允许别人通过git上传代码的功能

### 提交代码到github（当作git服务器来用）
  - ‘git push [地址] master’
  例如：git push https://github.com/544495731/test125.git  master

  + 会把当前分支的内容上传到远程master分支上


















































